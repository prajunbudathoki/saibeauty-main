/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as ClientImport } from './routes/_client'
import { Route as ClientIndexImport } from './routes/_client/index'
import { Route as AuthUpdatePasswordImport } from './routes/auth/update-password'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'
import { Route as ClientTeamImport } from './routes/_client/team'
import { Route as ClientServicesImport } from './routes/_client/services'
import { Route as ClientGalleryImport } from './routes/_client/gallery'
import { Route as ClientContactImport } from './routes/_client/contact'
import { Route as ClientAboutImport } from './routes/_client/about'
import { Route as AdminServicesIndexImport } from './routes/admin/services/index'
import { Route as AdminEmployeesIndexImport } from './routes/admin/employees/index'
import { Route as AdminCategoriesIndexImport } from './routes/admin/categories/index'
import { Route as AdminCategoriesIdImport } from './routes/admin/categories/$id'
import { Route as ClientProfileUserInfoImport } from './routes/_client/profile/user-info'
import { Route as ClientProfileUserAppointmentsImport } from './routes/_client/profile/user-appointments'
import { Route as ClientProfileMyBookingsImport } from './routes/_client/profile/my-bookings'
import { Route as ClientProfileBookingImport } from './routes/_client/profile/booking'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const ClientRoute = ClientImport.update({
  id: '/_client',
  getParentRoute: () => rootRoute,
} as any)

const ClientIndexRoute = ClientIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ClientRoute,
} as any)

const AuthUpdatePasswordRoute = AuthUpdatePasswordImport.update({
  id: '/update-password',
  path: '/update-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const ClientTeamRoute = ClientTeamImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => ClientRoute,
} as any)

const ClientServicesRoute = ClientServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => ClientRoute,
} as any)

const ClientGalleryRoute = ClientGalleryImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => ClientRoute,
} as any)

const ClientContactRoute = ClientContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => ClientRoute,
} as any)

const ClientAboutRoute = ClientAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => ClientRoute,
} as any)

const AdminServicesIndexRoute = AdminServicesIndexImport.update({
  id: '/admin/services/',
  path: '/admin/services/',
  getParentRoute: () => rootRoute,
} as any)

const AdminEmployeesIndexRoute = AdminEmployeesIndexImport.update({
  id: '/admin/employees/',
  path: '/admin/employees/',
  getParentRoute: () => rootRoute,
} as any)

const AdminCategoriesIndexRoute = AdminCategoriesIndexImport.update({
  id: '/admin/categories/',
  path: '/admin/categories/',
  getParentRoute: () => rootRoute,
} as any)

const AdminCategoriesIdRoute = AdminCategoriesIdImport.update({
  id: '/admin/categories/$id',
  path: '/admin/categories/$id',
  getParentRoute: () => rootRoute,
} as any)

const ClientProfileUserInfoRoute = ClientProfileUserInfoImport.update({
  id: '/profile/user-info',
  path: '/profile/user-info',
  getParentRoute: () => ClientRoute,
} as any)

const ClientProfileUserAppointmentsRoute =
  ClientProfileUserAppointmentsImport.update({
    id: '/profile/user-appointments',
    path: '/profile/user-appointments',
    getParentRoute: () => ClientRoute,
  } as any)

const ClientProfileMyBookingsRoute = ClientProfileMyBookingsImport.update({
  id: '/profile/my-bookings',
  path: '/profile/my-bookings',
  getParentRoute: () => ClientRoute,
} as any)

const ClientProfileBookingRoute = ClientProfileBookingImport.update({
  id: '/profile/booking',
  path: '/profile/booking',
  getParentRoute: () => ClientRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_client': {
      id: '/_client'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ClientImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_client/about': {
      id: '/_client/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof ClientAboutImport
      parentRoute: typeof ClientImport
    }
    '/_client/contact': {
      id: '/_client/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ClientContactImport
      parentRoute: typeof ClientImport
    }
    '/_client/gallery': {
      id: '/_client/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof ClientGalleryImport
      parentRoute: typeof ClientImport
    }
    '/_client/services': {
      id: '/_client/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ClientServicesImport
      parentRoute: typeof ClientImport
    }
    '/_client/team': {
      id: '/_client/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof ClientTeamImport
      parentRoute: typeof ClientImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/auth/update-password': {
      id: '/auth/update-password'
      path: '/update-password'
      fullPath: '/auth/update-password'
      preLoaderRoute: typeof AuthUpdatePasswordImport
      parentRoute: typeof AuthImport
    }
    '/_client/': {
      id: '/_client/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ClientIndexImport
      parentRoute: typeof ClientImport
    }
    '/_client/profile/booking': {
      id: '/_client/profile/booking'
      path: '/profile/booking'
      fullPath: '/profile/booking'
      preLoaderRoute: typeof ClientProfileBookingImport
      parentRoute: typeof ClientImport
    }
    '/_client/profile/my-bookings': {
      id: '/_client/profile/my-bookings'
      path: '/profile/my-bookings'
      fullPath: '/profile/my-bookings'
      preLoaderRoute: typeof ClientProfileMyBookingsImport
      parentRoute: typeof ClientImport
    }
    '/_client/profile/user-appointments': {
      id: '/_client/profile/user-appointments'
      path: '/profile/user-appointments'
      fullPath: '/profile/user-appointments'
      preLoaderRoute: typeof ClientProfileUserAppointmentsImport
      parentRoute: typeof ClientImport
    }
    '/_client/profile/user-info': {
      id: '/_client/profile/user-info'
      path: '/profile/user-info'
      fullPath: '/profile/user-info'
      preLoaderRoute: typeof ClientProfileUserInfoImport
      parentRoute: typeof ClientImport
    }
    '/admin/categories/$id': {
      id: '/admin/categories/$id'
      path: '/admin/categories/$id'
      fullPath: '/admin/categories/$id'
      preLoaderRoute: typeof AdminCategoriesIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/categories/': {
      id: '/admin/categories/'
      path: '/admin/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminCategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/employees/': {
      id: '/admin/employees/'
      path: '/admin/employees'
      fullPath: '/admin/employees'
      preLoaderRoute: typeof AdminEmployeesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/services/': {
      id: '/admin/services/'
      path: '/admin/services'
      fullPath: '/admin/services'
      preLoaderRoute: typeof AdminServicesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ClientRouteChildren {
  ClientAboutRoute: typeof ClientAboutRoute
  ClientContactRoute: typeof ClientContactRoute
  ClientGalleryRoute: typeof ClientGalleryRoute
  ClientServicesRoute: typeof ClientServicesRoute
  ClientTeamRoute: typeof ClientTeamRoute
  ClientIndexRoute: typeof ClientIndexRoute
  ClientProfileBookingRoute: typeof ClientProfileBookingRoute
  ClientProfileMyBookingsRoute: typeof ClientProfileMyBookingsRoute
  ClientProfileUserAppointmentsRoute: typeof ClientProfileUserAppointmentsRoute
  ClientProfileUserInfoRoute: typeof ClientProfileUserInfoRoute
}

const ClientRouteChildren: ClientRouteChildren = {
  ClientAboutRoute: ClientAboutRoute,
  ClientContactRoute: ClientContactRoute,
  ClientGalleryRoute: ClientGalleryRoute,
  ClientServicesRoute: ClientServicesRoute,
  ClientTeamRoute: ClientTeamRoute,
  ClientIndexRoute: ClientIndexRoute,
  ClientProfileBookingRoute: ClientProfileBookingRoute,
  ClientProfileMyBookingsRoute: ClientProfileMyBookingsRoute,
  ClientProfileUserAppointmentsRoute: ClientProfileUserAppointmentsRoute,
  ClientProfileUserInfoRoute: ClientProfileUserInfoRoute,
}

const ClientRouteWithChildren =
  ClientRoute._addFileChildren(ClientRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthUpdatePasswordRoute: typeof AuthUpdatePasswordRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthUpdatePasswordRoute: AuthUpdatePasswordRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof ClientRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/about': typeof ClientAboutRoute
  '/contact': typeof ClientContactRoute
  '/gallery': typeof ClientGalleryRoute
  '/services': typeof ClientServicesRoute
  '/team': typeof ClientTeamRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/update-password': typeof AuthUpdatePasswordRoute
  '/': typeof ClientIndexRoute
  '/profile/booking': typeof ClientProfileBookingRoute
  '/profile/my-bookings': typeof ClientProfileMyBookingsRoute
  '/profile/user-appointments': typeof ClientProfileUserAppointmentsRoute
  '/profile/user-info': typeof ClientProfileUserInfoRoute
  '/admin/categories/$id': typeof AdminCategoriesIdRoute
  '/admin/categories': typeof AdminCategoriesIndexRoute
  '/admin/employees': typeof AdminEmployeesIndexRoute
  '/admin/services': typeof AdminServicesIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/about': typeof ClientAboutRoute
  '/contact': typeof ClientContactRoute
  '/gallery': typeof ClientGalleryRoute
  '/services': typeof ClientServicesRoute
  '/team': typeof ClientTeamRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/update-password': typeof AuthUpdatePasswordRoute
  '/': typeof ClientIndexRoute
  '/profile/booking': typeof ClientProfileBookingRoute
  '/profile/my-bookings': typeof ClientProfileMyBookingsRoute
  '/profile/user-appointments': typeof ClientProfileUserAppointmentsRoute
  '/profile/user-info': typeof ClientProfileUserInfoRoute
  '/admin/categories/$id': typeof AdminCategoriesIdRoute
  '/admin/categories': typeof AdminCategoriesIndexRoute
  '/admin/employees': typeof AdminEmployeesIndexRoute
  '/admin/services': typeof AdminServicesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_client': typeof ClientRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_client/about': typeof ClientAboutRoute
  '/_client/contact': typeof ClientContactRoute
  '/_client/gallery': typeof ClientGalleryRoute
  '/_client/services': typeof ClientServicesRoute
  '/_client/team': typeof ClientTeamRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/update-password': typeof AuthUpdatePasswordRoute
  '/_client/': typeof ClientIndexRoute
  '/_client/profile/booking': typeof ClientProfileBookingRoute
  '/_client/profile/my-bookings': typeof ClientProfileMyBookingsRoute
  '/_client/profile/user-appointments': typeof ClientProfileUserAppointmentsRoute
  '/_client/profile/user-info': typeof ClientProfileUserInfoRoute
  '/admin/categories/$id': typeof AdminCategoriesIdRoute
  '/admin/categories/': typeof AdminCategoriesIndexRoute
  '/admin/employees/': typeof AdminEmployeesIndexRoute
  '/admin/services/': typeof AdminServicesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/about'
    | '/contact'
    | '/gallery'
    | '/services'
    | '/team'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/update-password'
    | '/'
    | '/profile/booking'
    | '/profile/my-bookings'
    | '/profile/user-appointments'
    | '/profile/user-info'
    | '/admin/categories/$id'
    | '/admin/categories'
    | '/admin/employees'
    | '/admin/services'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/about'
    | '/contact'
    | '/gallery'
    | '/services'
    | '/team'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/update-password'
    | '/'
    | '/profile/booking'
    | '/profile/my-bookings'
    | '/profile/user-appointments'
    | '/profile/user-info'
    | '/admin/categories/$id'
    | '/admin/categories'
    | '/admin/employees'
    | '/admin/services'
  id:
    | '__root__'
    | '/_client'
    | '/auth'
    | '/_client/about'
    | '/_client/contact'
    | '/_client/gallery'
    | '/_client/services'
    | '/_client/team'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/update-password'
    | '/_client/'
    | '/_client/profile/booking'
    | '/_client/profile/my-bookings'
    | '/_client/profile/user-appointments'
    | '/_client/profile/user-info'
    | '/admin/categories/$id'
    | '/admin/categories/'
    | '/admin/employees/'
    | '/admin/services/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ClientRoute: typeof ClientRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  AdminCategoriesIdRoute: typeof AdminCategoriesIdRoute
  AdminCategoriesIndexRoute: typeof AdminCategoriesIndexRoute
  AdminEmployeesIndexRoute: typeof AdminEmployeesIndexRoute
  AdminServicesIndexRoute: typeof AdminServicesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  ClientRoute: ClientRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  AdminCategoriesIdRoute: AdminCategoriesIdRoute,
  AdminCategoriesIndexRoute: AdminCategoriesIndexRoute,
  AdminEmployeesIndexRoute: AdminEmployeesIndexRoute,
  AdminServicesIndexRoute: AdminServicesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_client",
        "/auth",
        "/admin/categories/$id",
        "/admin/categories/",
        "/admin/employees/",
        "/admin/services/"
      ]
    },
    "/_client": {
      "filePath": "_client.tsx",
      "children": [
        "/_client/about",
        "/_client/contact",
        "/_client/gallery",
        "/_client/services",
        "/_client/team",
        "/_client/",
        "/_client/profile/booking",
        "/_client/profile/my-bookings",
        "/_client/profile/user-appointments",
        "/_client/profile/user-info"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/forgot-password",
        "/auth/login",
        "/auth/signup",
        "/auth/update-password"
      ]
    },
    "/_client/about": {
      "filePath": "_client/about.tsx",
      "parent": "/_client"
    },
    "/_client/contact": {
      "filePath": "_client/contact.tsx",
      "parent": "/_client"
    },
    "/_client/gallery": {
      "filePath": "_client/gallery.tsx",
      "parent": "/_client"
    },
    "/_client/services": {
      "filePath": "_client/services.tsx",
      "parent": "/_client"
    },
    "/_client/team": {
      "filePath": "_client/team.tsx",
      "parent": "/_client"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx",
      "parent": "/auth"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx",
      "parent": "/auth"
    },
    "/auth/update-password": {
      "filePath": "auth/update-password.tsx",
      "parent": "/auth"
    },
    "/_client/": {
      "filePath": "_client/index.tsx",
      "parent": "/_client"
    },
    "/_client/profile/booking": {
      "filePath": "_client/profile/booking.tsx",
      "parent": "/_client"
    },
    "/_client/profile/my-bookings": {
      "filePath": "_client/profile/my-bookings.tsx",
      "parent": "/_client"
    },
    "/_client/profile/user-appointments": {
      "filePath": "_client/profile/user-appointments.tsx",
      "parent": "/_client"
    },
    "/_client/profile/user-info": {
      "filePath": "_client/profile/user-info.tsx",
      "parent": "/_client"
    },
    "/admin/categories/$id": {
      "filePath": "admin/categories/$id.tsx"
    },
    "/admin/categories/": {
      "filePath": "admin/categories/index.tsx"
    },
    "/admin/employees/": {
      "filePath": "admin/employees/index.tsx"
    },
    "/admin/services/": {
      "filePath": "admin/services/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
